- name: "{{ project_name }} : verify that quota exists"
  file:
    path: quotas/{{ project_data.quota|default(default_quota) }}/resourcequota.yaml

- name: "{{ project_name }} : display project information"
  debug:
    var: project_data

- when: actually_create_projects|default(false)|bool
  block:
    - name: "{{ project_name }} : create namespace"
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ project_name }}"
            namespace: "{{ project_name }}"

            # We put the description in display-name because this shows up
            # in the project list [1], although oddly enough it
            # *doesn't* show up in the project detail page. Sometimes
            # you just can't win.
            #
            # [1]: https://console-openshift-console.apps.ocp-prod.massopen.cloud/k8s/cluster/projects
            annotations:
              openshift.io/requester: "{{ project_data.requester }}"
              openshift.io/display-name: "{{ project_data.description }}"
            labels:
              massopen.cloud/project: "{{ project_name }}"

    # Using `with_first_found` with `skip: true` means that this task
    # will only run if the named file exists.
    - name: "{{ project_name }} : create limitrange"
      kubernetes.core.k8s:
        state: present
        namespace: "{{ project_name }}"
        src: "{{ objdef }}"
      loop_control:
        loop_var: objdef
      with_first_found:
        - skip: true
          files:
            - quotas/{{ project_data.quota|default(default_quota) }}/limitrange.yaml

    - name: "{{ project_name }} : create quota"
      kubernetes.core.k8s:
        state: present
        namespace: "{{ project_name }}"
        src: quotas/{{ project_data.quota|default(default_quota) }}/resourcequota.yaml

    - name: "{{ project_name }} : create groups"
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: user.openshift.io/v1
          kind: Group
          metadata:
            name: "{{ project_name }}-{{ role }}"
            labels:
              massopen.cloud/project: "{{ project_name }}"
          users: "{{ project_data[project_member_attr[role]]|default([]) }}"
      loop_control:
        loop_var: role
      loop:
        - admin
        - member
        - reader

    - name: "{{ project_name }} : create rolebindings"
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: "{{ project_name }}-{{ role }}"
            namespace: "{{ project_name }}"
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: "{{ project_role_map[role] }}"
          subjects:
            - apiGroup: rbac.authorization.k8s.io
              kind: Group
              name: "{{ project_name }}-{{ role }}"
      loop_control:
        loop_var: role
      loop: "{{ project_role_map.keys() }}"
